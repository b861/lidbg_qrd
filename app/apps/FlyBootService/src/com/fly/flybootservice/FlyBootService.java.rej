--- app/apps/FlyBootService/src/com/fly/flybootservice/FlyBootService.java
+++ app/apps/FlyBootService/src/com/fly/flybootservice/FlyBootService.java
@@ -45,9 +45,6 @@
 
 import java.io.File;
 import java.io.FileOutputStream;
-import java.io.FileInputStream;
-import java.io.DataInputStream;
-import java.io.FileNotFoundException;
 import java.util.List;
 import java.io.IOException;
 
@@ -71,15 +68,6 @@
     private static String ACTON_FINAL_SLEEP = "fly.alarm.timeup";
     // private int mBootState = NORMAL;
 
-    private final static int FBS_SCREEN_OFF = 0;
-    private final static int FBS_DEVICE_DOWN = 1;
-    private final static int FBS_ANDROID_DOWN = 2;
-    private final static int FBS_GOTO_SLEEP = 3;
-    private final static int FBS_KERNEL_DOWN = 4;
-    private final static int FBS_KERNEL_UP = 5;
-    private final static int FBS_ANDROID_UP = 6;
-    private final static int FBS_DEVICE_UP = 7;
-    private final static int FBS_SCREEN_ON = 8;
     public static String action = "com.flyaudio.power";
     public static String PowerBundle = "POWERBUNDLE";
     public static String keyScreenOn = "KEY_SCREEN_ON";
@@ -128,9 +116,6 @@
     Thread sendBroadcastThread = null;
     private static boolean firstBootFlag = false;
     private static boolean originPmMode = true;
-    private static String pmFile = "/dev/flyaudio_pm0";
-    private int iPmState = 0;
-    private static int pmState = -1;
 
     // add launcher in protected list
     String systemLevelProcess[] = {
@@ -174,8 +159,8 @@
         filter_secret.addDataScheme("android_secret_code");
         filter.setPriority(Integer.MAX_VALUE);
         powerBroadcastReceiver = new PowerBroadcastReceiver();
-//        registerReceiver(powerBroadcastReceiver, filter);
-//        registerReceiver(powerBroadcastReceiver, filter_secret);
+        registerReceiver(powerBroadcastReceiver, filter);
+        registerReceiver(powerBroadcastReceiver, filter_secret);
 
         mFlyBootService = this;
 
@@ -185,75 +170,6 @@
 
         acquireWakeLock();
         delay(5000);
-
-        new Thread() {
-            @Override
-            public void run() {
-					while(true){
-						pmState = readFromFile(pmFile);
-						if(pmState < 0)
-						{
-							LIDBG_PRINT("FlyBootService get pm state failed.");
-							delay(500);
-						}
-						else{
-							switch (pmState) {
-								case FBS_SCREEN_OFF:
-									LIDBG_PRINT("FlyBootService get pm state: FBS_SCREEN_OFF");
-									SendBroadcastToService(KeyBootState, keyScreenOFF);
-									break;
-								case FBS_DEVICE_DOWN:
-									LIDBG_PRINT("FlyBootService get pm state: FBS_DEVICE_DOWN");
-									enterAirplaneMode();
-									SendBroadcastToService(KeyBootState, keyEearlySusupendOFF);
-									LIDBG_PRINT("FlyBootService sent device_down to hal");
-									sendBroadcast(new Intent(ACC_OFF_FLYUI));
-									break;
-								case FBS_ANDROID_DOWN:
-									LIDBG_PRINT("FlyBootService get pm state: FBS_ANDROID_DOWN");
-									SendBroadcastToService(KeyBootState, keyFastSusupendOFF);
-									start_fastboot();
-									break;
-								case FBS_GOTO_SLEEP:
-									LIDBG_PRINT("FlyBootService get pm state: FBS_GOTO_SLEEP delay(1000)");
-									delay(1000);
-									break;
-								case FBS_KERNEL_DOWN:
-									LIDBG_PRINT("FlyBootService get pm state: FBS_KERNEL_DOWN");
-									break;
-								case FBS_KERNEL_UP:
-									LIDBG_PRINT("FlyBootService get pm state: FBS_KERNEL_UP");
-									break;
-								case FBS_ANDROID_UP:
-									LIDBG_PRINT("FlyBootService get pm state: FBS_ANDROID_UP");
-									SendBroadcastToService(KeyBootState, keyScreenOn);
-									SendBroadcastToService(KeyBootState, keyFastSusupendON);
-									sendBroadcast(new Intent(SYSTEM_RESUME));
-									restoreAirplaneMode(mFlyBootService);
-									Intent intentBoot = new Intent(Intent.ACTION_BOOT_COMPLETED);
-									intentBoot.putExtra("flyauduio_accon", "accon");
-									sendBroadcast(intentBoot);  
-									break;
-								case FBS_DEVICE_UP:
-									LIDBG_PRINT("FlyBootService get pm state: FBS_DEVICE_UP");
-									restoreAirplaneMode(mFlyBootService);
-									sendBroadcast(new Intent(ACC_ON_FLYUI));
-									SendBroadcastToService(KeyBootState, keyEearlySusupendON);
-									SendBroadcastToService(KeyBootState, keyScreenOn);
-									break;
-								case FBS_SCREEN_ON:
-									LIDBG_PRINT("FlyBootService get pm state: FBS_SCREEN_ON");
-									restoreAirplaneMode(mFlyBootService);
-									SendBroadcastToService(KeyBootState, keyScreenOn);
-									break;
-								default:
-									return;
-							}
-						}
-					}
-            }
-        }.start();
-
         //setAndroidState(true);
 
     }
@@ -362,7 +278,7 @@
 			LIDBG_PRINT("Flyaudio Remote-Control disabled, booleanRemoteControl:"+booleanRemoteControl);
 		}
 
-//		writeToFile(file, DEVICES_DOWN);
+		writeToFile(file, DEVICES_DOWN);
 		delay(500);
 		sleppHandler.postDelayed(runnable, ALERM_TIME * 1000);
 		mState = emState.DeviceOff;
@@ -389,8 +305,8 @@
             acquireWakeLock();
 
             restoreAirplaneMode(mFlyBootService);
-//            writeToFile(file, SCREEN_ON);// 正常ACC，开背光
-//            LIDBG_PRINT("writeToFile Screen On");
+            writeToFile(file, SCREEN_ON);// 正常ACC，开背光
+            LIDBG_PRINT("writeToFile Screen On");
             SendBroadcastToService(KeyBootState, keyScreenOn);
             mState = emState.ScreenOn;
         } else if (mState == emState.DeviceOff) {
@@ -398,9 +314,9 @@
             sleppHandler.removeCallbacks(runnable);
 
             restoreAirplaneMode(mFlyBootService);
-//            writeToFile(file, DEVICES_ON);// 唤醒
-//            writeToFile(file, SCREEN_ON);// 开背光
-//            LIDBG_PRINT("writeToFile Device On");
+            writeToFile(file, DEVICES_ON);// 唤醒
+            writeToFile(file, SCREEN_ON);// 开背光
+            LIDBG_PRINT("writeToFile Device On");
             sendBroadcast(new Intent(ACC_ON_FLYUI));
             SendBroadcastToService(KeyBootState, keyEearlySusupendON);
             SendBroadcastToService(KeyBootState, keyScreenOn);
@@ -414,8 +330,8 @@
             setAndroidState(true);
 
             restoreAirplaneMode(mFlyBootService);
-//            writeToFile(file, DEVICES_ON);// 唤醒
-//            writeToFile(file, SCREEN_ON);// 开背光
+            writeToFile(file, DEVICES_ON);// 唤醒
+            writeToFile(file, SCREEN_ON);// 开背光
 
             acquireWakeLock();
             mState = emState.ScreenOn;
@@ -431,7 +347,7 @@
     private void procScreenOff() {
         if (mState == emState.ScreenOn) {
             LIDBG_PRINT("Screen off");
-//            writeToFile(file, SCREEN_OFF);// 关背光
+            writeToFile(file, SCREEN_OFF);// 关背光
             SendBroadcastToService(KeyBootState, keyScreenOFF);
             mHandler.postDelayed(ealysuspend, EALYSUSPEND_TIME * 1000);
             mState = emState.ScreenOff;
@@ -729,7 +645,7 @@
 		KillProcess();
 		LIDBG_PRINT("powerOffSystem step5");
 		//goToSleep前通知内核,作用关外设
-		//msgTokenal("flyaudio gotosleep");
+		msgTokenal("flyaudio gotosleep");
 
 		LIDBG_PRINT("powerOffSystem step6");
 		SystemClock.sleep(1000);
@@ -934,38 +850,15 @@
         try {
             LIDBG_PRINT(" shareFastBootState " + bUpDown);
             if (bUpDown) {
-//                writeToFile(file, "flyaudio android_up");
+                writeToFile(file, "flyaudio android_up");
             } else {
-//                writeToFile(file, "flyaudio android_down");
+                writeToFile(file, "flyaudio android_down");
             }
         } catch (Exception e) {
             Log.d(TAG, e.getMessage());
         }
     }
 
-	public int readFromFile(String fileName)
-	{
-		try
-		{
-			int temp = -1;
-			DataInputStream dis = new DataInputStream(new FileInputStream(
-					new File(fileName)));
-			temp = dis.readUnsignedByte();
-			dis.close();
-			return temp;
-		} catch (FileNotFoundException e)
-		{
-			// TODO Auto-generated catch block
-			e.printStackTrace();
-			return -1;
-		} catch (IOException e)
-		{
-			// TODO Auto-generated catch block
-			e.printStackTrace();
-			return -1;
-		}
-	}
-
     public void writeToFile(String filePath, String str) {
         File mFile = new File(filePath);
         if (mFile.exists()) {
